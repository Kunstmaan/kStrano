<?xml version="1.0" encoding="UTF-8"?>

<project name="" default="build">

    <target name="sync" description="Sync files and database from online">
        <exec executable="${basedir}/sync" failonerror="true" />
    </target>

    <target name="build" depends="prepare,decodeParam,vendors"/>

    <target name="test" depends="lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit,phpcb,behat"/>

    <target name="build-parallel" depends="prepare,decodeParam,vendors,lint,tools-parallel,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/behat"/>
        <delete dir="${basedir}/app/cache"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdox"/>
        <mkdir dir="${basedir}/app/cache"/>
    </target>

    <target name="lint">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>
            <fileset dir="${basedir}/src">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="${basedir}/app">
                <include name="**/*.php"/>
                <exclude name="cache/**/*.php"/>
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
            <arg path="${basedir}/src"/>
        </exec>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}/src" />
            <arg value="text" />
            <arg value="${basedir}/build/phpmd.xml" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${basedir}/src" />
            <arg value="xml" />
            <arg value="${basedir}/build/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=Symfony2" />
            <arg value="--ignore=autoload.php"/>
            <arg value="--ignore=*.js"/>
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=Symfony2" />
            <arg value="--ignore=autoload.php"/>
            <arg value="--ignore=*.js"/>
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpdox"
            description="Generate API documentation using phpDox">
        <exec executable="phpdox"/>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="false">
            <arg value="-c"/>
            <arg value="${basedir}/app/"/>
        </exec>
    </target>

    <target name="phpcb"
            description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}/src" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>

    <target name="vendors" description="Install vendors">
        <exec executable="composer" failonerror="true">
            <arg value="install"/>
        </exec>
    </target>

    <target name="init" description="init">
        <exec executable="${basedir}/app/console" failonerror="true">
        <arg value="doctrine:schema:drop"/>
        <arg value="--force"/>
    </exec>
        <exec executable="${basedir}/app/console" failonerror="true">
        <arg value="doctrine:schema:create"/>
    </exec>
        <exec executable="${basedir}/app/console" failonerror="true">
        <arg value="doctrine:fixtures:load"/>
    </exec>
    <exec executable="${basedir}/app/console" failonerror="true">
        <arg value="assets:install"/>
        <arg value="web"/>
    </exec>
    <exec executable="${basedir}/app/console" failonerror="true">
        <arg value="assetic:dump"/>
    </exec>
    </target>

    <target name="decodeParam" description="Extract the parameters.ini">
        <exec executable="${basedir}/param" failonerror="true">
        <arg value="decode"/>
    </exec>
    </target>

    <target name="migrations" description="Doctrine migrations">
        <exec executable="${basedir}/app/console" failonerror="false">
        <arg value="doctrine:migrations:migrate"/>
        <arg value="--no-interaction"/>
    </exec>
    </target>

    <target name="behat">
        <delete dir="${basedir}/build/behat" />
        <mkdir dir="${basedir}/build/behat"/>
        <exec dir="${basedir}" executable="bin/behat" failonerror="false">
          <arg line="src"/>
          <arg line="-f"/>
          <arg line="pretty,junit"/>
          <arg line="--out"/>
          <arg line=",build/behat"/>
        </exec>
    </target>

</project>